QEMU/KVM Setup Guide for Arch-Based Distrobutions. (This requires two GPU's for a really good gaming Virtual Machine).

1. Enable your CPU IOMMU Driver.
Note: If you have an AMD processor, then you can just skip this step due to AMD iommu systems being enabled by default if enabled in BIOS.
Systemd-boot = sudo nano /boot/loader/entries/arch.conf
	     = Add "intel_iommu=on" to the end of the options line.
	     = reboot

Grub Bootloader = sudo nano /etc/default/grub
	        = Add "intel_iommu=on" to GRUB_CMDLINE_LINUX_DEFAULT="".
	        = grub-mkconfig -o /boot/grub/grub.cfg
	        = reboot

2. Check to make sure IOMMU has been enabled. = sudo dmesg | grep -i -e DMAR -e IOMMU

3. Verify that the IOMMU groups are valid.
a. paste this comand and make sure to tell your terminal not to change anything, just paste it in and that's it.
shopt -s nullglob
for g in $(find /sys/kernel/iommu_groups/* -maxdepth 0 -type d | sort -V); do
    echo "IOMMU Group ${g##*/}:"
    for d in $g/devices/*; do
        echo -e "\t$(lspci -nns ${d##*/})"
    done;
done;

b. Save your GPU iommu groups because you're going to need it for later.
Example: (This was pulled from the Arch wiki. Use your GPU's IOMMU groups).
IOMMU Group 13:
	 06:00.0 VGA compatible controller: NVIDIA Corporation GM204 [GeForce GTX 970] [10de:13c2] (rev a1)
	 06:00.1 Audio device: NVIDIA Corporation GM204 High Definition Audio Controller [10de:0fbb] (rev a1)

(Note: If your GPU is assigned in a group with another device, you're going to need to ACS Patch your kernel and that's way too complex, or install the zen kernel for virtualization).

4a. Isolating your GPU. (Grub Bootloader)
a. sudo nano /etc/default/grub
b. Add "vfio-pci.ids=10de:13c2,10de:0fbb" to GRUB_CMDLINE_LINUX_DEFAULT="".
c. grub-mkconfig -o /boot/grub/grub.cfg
d. sudo nano /etc/mkinitcpio.conf
e. Add "vfio_pci vfio vfio_iommu_type1 vfio_virqfd" into the "MODULES=()" line.
Note: If you fuck up this line, you're in trouble. So make sure it's in this order perfectly.
f. If "modconf" isn't in the "HOOKS=()", add it in there
g. sudo mkinitcpio -P
h. reboot

4b. Isolating your GPU. (Systemd-Boot)
a. sudo nano /boot/loader/entries/arch.conf
b. Add "vfio-pci.ids=10de:13c2,10de:0fbb" to the end of the options line. 
c. sudo nano /etc/mkinitcpio.conf
d. Add "vfio_pci vfio vfio_iommu_type1 vfio_virqfd" into the "MODULES=()" line.
Note: If you fuck up this line, you're in trouble. So make sure it's in this order perfectly.
e. If "modconf" isn't in the "HOOKS=()", add it in there
f. sudo mkinitcpio -P
g. reboot

5. Setting up your Virtual Machine.
a. sudo pacman -S qemu-desktop libvirt edk2-ovmf virt-manager iptables-nft dnsmaq swtpm
b. sudo systemctl enable libvirtd.service --now
c. sudo systemctl enable virtlogd.socket --now
d. sudo virsh net-start default
e. sudo virsh net-autostart default

6. Actually setting up your Virtual Machine. (The steps before were command line stuff that you won't need to touch again).
a. Download the Windows 11 ISO and save it somewhere.
b. Open VirtManager and select create new.
c. Enter basic values and select I want to edit this VM 

(The rest is incomplete, but you can just google a video on how to setup virt-manager with qemu).
